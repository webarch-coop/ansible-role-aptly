---
# tasks file for aptly

- name: import aptly repo key
  become: yes
  apt_key:
      id: "ED75B5A4483DA07C"
      keyserver: "hkp://p80.pool.sks-keyservers.net:80"
      state: present

- name: add aptly debian repository
  become: yes
  apt_repository:
    repo: 'deb http://repo.aptly.info/ squeeze main'
    state: present
- name: install required packages
  become: yes
  apt:
    name: gnupg2,rng-tools,aptly
    update_cache: yes

# begin key creation tasks (automatically generates and imports a DSA key-pair to get you up and running quickly)

- name: Check if /dev/hwrandom exists
  stat:
    path: /dev/hwrandom
  register: aptly_hwrandom

- name: Check if rngd is running
  shell: ps -lA | grep rngd
  ignore_errors: true
  register: aptly_rngd

- name: Kill rngd if it is running
  command: killall rngd
  when: '"rngd" in aptly_rngd.stdout'

- name: start rngd for entropy creation
  become: true
  command: rngd -b -r /dev/random
  args:
    creates: "{{ aptly_gpg_key_dir }}/key.sec"
  when: aptly_hwrandom.stat.exists == False

- name: start rngd for entropy creation
  become: true
  command: rngd -b -r /dev/hwrandom
  args:
    creates: "{{ aptly_gpg_key_dir }}/key.sec"
  when: aptly_hwrandom.stat.exists == True

- name: create aptly_gpg_key_dir
  file:
    path: "{{ aptly_gpg_key_dir }}"
    state: directory

- name: copy gpg key-gen batch file
  template:
    src: gpg2_gen_key.j2
    dest: "{{ aptly_gpg_key_dir }}/gpg2_gen_key"
    mode: 0644

# this always times out
#- name: create key
#  command: gpg2 --batch --gen-key {{ aptly_gpg_key_dir }}/gpg2_gen_key
#  args:
#    creates: "{{ aptly_gpg_key_dir }}/key.sec"

- name: "check if {{ aptly_gpg_key_dir }}/key.sec exists"
  stat:
    path: "{{ aptly_gpg_key_dir }}/key.sec"
  register: aptly_gpg_key_secret_key

- name: "fail if {{ aptly_gpg_key_dir }}/key.sec doesn't exist"
  fail:
    msg: "you need to ssh into the server and run this command: gpg2 --batch --gen-key {{ aptly_gpg_key_dir }}/gpg2_gen_key"
  when: aptly_gpg_key_secret_key.stat.exists == False

- name: stop random source
  service:
    name: rng-tools
    state: stopped

- name: Check if rngd is running
  shell: ps -lA | grep rngd
  ignore_errors: true
  register: aptly_rngd

- name: Kill rngd if it is running
  command: killall rngd
  when: '"rngd" in aptly_rngd.stdout'

- name: import pub key to gnupg
  command: gpg2 --import {{ aptly_gpg_key_dir }}/key.pub

# ignore 'already in secret keyring' error
- name: import sec key to gnupg
  command: gpg2 --import {{ aptly_gpg_key_dir }}/key.sec
  ignore_errors: yes

# end key creation tasks

# CLI conflict - https://github.com/smira/aptly/issues/234
- name: start aptly API (will conflict with command line until stopped)
  command: sh -c "nohup aptly api serve 2>&1 >/dev/null &"

- name: create repositories
  command: >
    curl -X POST -H 'Content-Type: application/json' --data '{"name": "{{ item.name }}", "comment": "{{ item.comment }}", "DefaultDistribution": "{{ item.default_distribution }}", "DefaultComponent": "{{ item.default_component }}" }' http://localhost:8080/api/repos
  with_items: aptly_repositories
  when: aptly_repositories is defined

- include: test.yml
